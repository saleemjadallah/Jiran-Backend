"""initial migration - phase 1 core models

Revision ID: 35644ce37583
Revises: 
Create Date: 2025-10-17 16:44:12.235419

"""
from alembic import op
import geoalchemy2
import sqlalchemy as sa

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '35644ce37583'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('avatar_url', sa.String(length=1024), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('role', sa.Enum('BUYER', 'SELLER', 'BOTH', 'ADMIN', name='user_role'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('neighborhood', sa.String(length=255), nullable=True),
    sa.Column('building_name', sa.String(length=255), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_connect_account_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    #     op.create_index('idx_users_location', 'users', ['location'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('products',
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('original_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('category', sa.Enum('TRADING_CARDS', 'MENS_FASHION', 'SNEAKERS', 'SPORTS_CARDS', 'COLLECTIBLES', 'ELECTRONICS', 'HOME_DECOR', 'BEAUTY', 'KIDS_BABY', 'FURNITURE', 'BOOKS', 'OTHER', name='product_category'), nullable=False),
    sa.Column('condition', sa.Enum('NEW', 'LIKE_NEW', 'GOOD', 'FAIR', name='product_condition'), nullable=False),
    sa.Column('feed_type', sa.Enum('DISCOVER', 'COMMUNITY', name='feed_type'), nullable=False),
    sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('neighborhood', sa.String(length=255), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('image_urls', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('video_url', sa.String(length=1024), nullable=True),
    sa.Column('video_thumbnail_url', sa.String(length=1024), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('sold_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], name=op.f('fk_products_seller_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products'))
    )
    #     op.create_index('idx_products_location', 'products', ['location'], unique=False, postgresql_using='gist')
    op.create_index('ix_products_category_feed', 'products', ['category', 'feed_type'], unique=False)
    op.create_index(op.f('ix_products_is_available'), 'products', ['is_available'], unique=False)
    op.create_index(op.f('ix_products_seller_id'), 'products', ['seller_id'], unique=False)
    op.create_table('streams',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.Enum('TRADING_CARDS', 'MENS_FASHION', 'SNEAKERS', 'SPORTS_CARDS', 'COLLECTIBLES', 'ELECTRONICS', 'HOME_DECOR', 'BEAUTY', 'KIDS_BABY', 'FURNITURE', 'BOOKS', 'OTHER', name='stream_category'), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'LIVE', 'ENDED', name='stream_status'), nullable=False),
    sa.Column('stream_type', sa.Enum('LIVE', 'RECORDED', name='stream_type'), nullable=False),
    sa.Column('rtmp_url', sa.String(length=1024), nullable=True),
    sa.Column('stream_key', sa.String(length=512), nullable=True),
    sa.Column('hls_url', sa.String(length=1024), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=1024), nullable=True),
    sa.Column('viewer_count', sa.Integer(), nullable=False),
    sa.Column('total_views', sa.Integer(), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_streams_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_streams'))
    )
    op.create_index('ix_streams_category', 'streams', ['category'], unique=False)
    op.create_index('ix_streams_status', 'streams', ['status'], unique=False)
    op.create_index('ix_streams_user_id', 'streams', ['user_id'], unique=False)
    op.create_table('verifications',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('verification_type', sa.Enum('EMIRATES_ID', 'TRADE_LICENSE', 'BOTH', name='verification_type'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='verification_status'), nullable=False),
    sa.Column('emirates_id_number', sa.String(length=128), nullable=True),
    sa.Column('emirates_id_front_image_url', sa.String(length=1024), nullable=True),
    sa.Column('emirates_id_back_image_url', sa.String(length=1024), nullable=True),
    sa.Column('trade_license_number', sa.String(length=128), nullable=True),
    sa.Column('trade_license_document_url', sa.String(length=1024), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reviewed_by', sa.UUID(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], name=op.f('fk_verifications_reviewed_by_users'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_verifications_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_verifications')),
    sa.UniqueConstraint('user_id', name=op.f('uq_verifications_user_id'))
    )
    op.create_index('ix_verifications_status', 'verifications', ['status'], unique=False)
    op.create_index('ix_verifications_user_id', 'verifications', ['user_id'], unique=False)
    op.create_table('conversations',
    sa.Column('buyer_id', sa.UUID(), nullable=False),
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=True),
    sa.Column('last_message_id', sa.UUID(), nullable=True),
    sa.Column('last_message_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('unread_count_buyer', sa.Integer(), nullable=False),
    sa.Column('unread_count_seller', sa.Integer(), nullable=False),
    sa.Column('is_archived_buyer', sa.Boolean(), nullable=False),
    sa.Column('is_archived_seller', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], name=op.f('fk_conversations_buyer_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['last_message_id'], ['messages.id'], name='fk_conversations_last_message', ondelete='SET NULL', use_alter=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_conversations_product_id_products'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], name=op.f('fk_conversations_seller_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_conversations'))
    )
    op.create_index('ix_conversations_buyer_seller', 'conversations', ['buyer_id', 'seller_id'], unique=False)
    op.create_index('ix_conversations_product', 'conversations', ['product_id'], unique=False)
    op.create_table('transactions',
    sa.Column('buyer_id', sa.UUID(), nullable=False),
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('platform_fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('seller_payout', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('feed_type', sa.Enum('DISCOVER', 'COMMUNITY', name='transaction_feed_type'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED', name='transaction_status'), nullable=False),
    sa.Column('stripe_payment_intent_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_charge_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_transfer_id', sa.String(length=255), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], name=op.f('fk_transactions_buyer_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_transactions_product_id_products'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], name=op.f('fk_transactions_seller_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transactions'))
    )
    op.create_index('ix_transactions_buyer', 'transactions', ['buyer_id'], unique=False)
    op.create_index('ix_transactions_product', 'transactions', ['product_id'], unique=False)
    op.create_index('ix_transactions_seller', 'transactions', ['seller_id'], unique=False)
    op.create_index('ix_transactions_status', 'transactions', ['status'], unique=False)
    op.create_table('messages',
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('sender_id', sa.UUID(), nullable=False),
    sa.Column('message_type', sa.Enum('TEXT', 'IMAGE', 'OFFER', 'SYSTEM', name='message_type'), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('image_urls', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('offer_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], name=op.f('fk_messages_conversation_id_conversations'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name=op.f('fk_messages_sender_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_messages'))
    )
    op.create_index('ix_messages_conversation', 'messages', ['conversation_id'], unique=False)
    op.create_index('ix_messages_sender', 'messages', ['sender_id'], unique=False)
    op.create_table('offers',
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('buyer_id', sa.UUID(), nullable=False),
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('offered_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('original_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'EXPIRED', 'COUNTERED', name='offer_status'), nullable=False),
    sa.Column('counter_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('responded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], name=op.f('fk_offers_buyer_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], name=op.f('fk_offers_conversation_id_conversations'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_offers_product_id_products'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], name=op.f('fk_offers_seller_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_offers'))
    )
    op.create_index('ix_offers_conversation', 'offers', ['conversation_id'], unique=False)
    op.create_index('ix_offers_product', 'offers', ['product_id'], unique=False)
    op.create_index('ix_offers_status', 'offers', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_offers_status', table_name='offers')
    op.drop_index('ix_offers_product', table_name='offers')
    op.drop_index('ix_offers_conversation', table_name='offers')
    op.drop_table('offers')
    op.drop_index('ix_messages_sender', table_name='messages')
    op.drop_index('ix_messages_conversation', table_name='messages')
    op.drop_table('messages')
    op.drop_index('ix_transactions_status', table_name='transactions')
    op.drop_index('ix_transactions_seller', table_name='transactions')
    op.drop_index('ix_transactions_product', table_name='transactions')
    op.drop_index('ix_transactions_buyer', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index('ix_conversations_product', table_name='conversations')
    op.drop_index('ix_conversations_buyer_seller', table_name='conversations')
    op.drop_table('conversations')
    op.drop_index('ix_verifications_user_id', table_name='verifications')
    op.drop_index('ix_verifications_status', table_name='verifications')
    op.drop_table('verifications')
    op.drop_index('ix_streams_user_id', table_name='streams')
    op.drop_index('ix_streams_status', table_name='streams')
    op.drop_index('ix_streams_category', table_name='streams')
    op.drop_table('streams')
    op.drop_index(op.f('ix_products_seller_id'), table_name='products')
    op.drop_index(op.f('ix_products_is_available'), table_name='products')
    op.drop_index('ix_products_category_feed', table_name='products')
    op.drop_index('idx_products_location', table_name='products', postgresql_using='gist')
    op.drop_table('products')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_location', table_name='users', postgresql_using='gist')
    op.drop_table('users')
    # ### end Alembic commands ###

