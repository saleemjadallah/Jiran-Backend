"""Phase 7: Social features - Follow, Notifications, Activities

Revision ID: be5f12795a69
Revises: 5822d3a8617c
Create Date: 2025-10-18 17:19:21.313675

"""
from alembic import op
import sqlalchemy as sa



# revision identifiers, used by Alembic.
revision = 'be5f12795a69'
down_revision = '5822d3a8617c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blocks',
    sa.Column('blocker_id', sa.UUID(), nullable=False),
    sa.Column('blocked_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['blocked_id'], ['users.id'], name=op.f('fk_blocks_blocked_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['blocker_id'], ['users.id'], name=op.f('fk_blocks_blocker_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_blocks')),
    sa.UniqueConstraint('blocker_id', 'blocked_id', name='uq_blocker_blocked')
    )
    op.create_index('ix_blocks_blocked_id', 'blocks', ['blocked_id'], unique=False)
    op.create_index('ix_blocks_blocker_id', 'blocks', ['blocker_id'], unique=False)
    op.create_table('device_tokens',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('fcm_token', sa.String(length=512), nullable=False),
    sa.Column('platform', sa.Enum('IOS', 'ANDROID', name='device_platform'), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_device_tokens_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_device_tokens')),
    sa.UniqueConstraint('device_id', name=op.f('uq_device_tokens_device_id'))
    )
    op.create_index('ix_device_tokens_fcm_token', 'device_tokens', ['fcm_token'], unique=False)
    op.create_index('ix_device_tokens_user', 'device_tokens', ['user_id'], unique=False)
    op.create_table('follows',
    sa.Column('follower_id', sa.UUID(), nullable=False),
    sa.Column('following_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], name=op.f('fk_follows_follower_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['following_id'], ['users.id'], name=op.f('fk_follows_following_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_follows')),
    sa.UniqueConstraint('follower_id', 'following_id', name='uq_follower_following')
    )
    op.create_index('ix_follows_follower', 'follows', ['follower_id'], unique=False)
    op.create_index('ix_follows_following', 'follows', ['following_id'], unique=False)
    op.create_table('notifications',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('notification_type', sa.Enum('NEW_FOLLOWER', 'NEW_MESSAGE', 'NEW_OFFER', 'OFFER_ACCEPTED', 'OFFER_DECLINED', 'OFFER_COUNTERED', 'PRODUCT_SOLD', 'TRANSACTION_COMPLETED', 'PRICE_DROP', 'REVIEW_RECEIVED', 'STREAM_STARTED', 'STREAM_ENDED', 'VERIFICATION_APPROVED', 'VERIFICATION_REJECTED', 'SYSTEM_ANNOUNCEMENT', name='notification_type'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notifications_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    op.create_index('ix_notifications_created', 'notifications', ['created_at'], unique=False)
    op.create_index('ix_notifications_user', 'notifications', ['user_id'], unique=False)
    op.create_index('ix_notifications_user_read', 'notifications', ['user_id', 'is_read'], unique=False)
    op.create_table('activities',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('activity_type', sa.Enum('WENT_LIVE', 'STREAM_ENDED', 'NEW_PRODUCT', 'PRODUCT_SOLD', 'NEW_FOLLOWER', 'REVIEW_RECEIVED', 'MILESTONE', name='activity_type'), nullable=False),
    sa.Column('related_product_id', sa.UUID(), nullable=True),
    sa.Column('related_stream_id', sa.UUID(), nullable=True),
    sa.Column('related_user_id', sa.UUID(), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['related_product_id'], ['products.id'], name=op.f('fk_activities_related_product_id_products'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['related_stream_id'], ['streams.id'], name=op.f('fk_activities_related_stream_id_streams'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['related_user_id'], ['users.id'], name=op.f('fk_activities_related_user_id_users'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_activities_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_activities'))
    )
    op.create_index('ix_activities_created', 'activities', ['created_at'], unique=False)
    op.create_index('ix_activities_user', 'activities', ['user_id'], unique=False)
    op.create_index('ix_activities_user_created', 'activities', ['user_id', 'created_at'], unique=False)
    op.create_table('reports',
    sa.Column('reporter_id', sa.UUID(), nullable=False),
    sa.Column('reported_user_id', sa.UUID(), nullable=True),
    sa.Column('reported_product_id', sa.UUID(), nullable=True),
    sa.Column('report_type', sa.Enum('PRODUCT', 'USER', name='report_type'), nullable=False),
    sa.Column('reason', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('evidence_urls', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'UNDER_REVIEW', 'RESOLVED', 'DISMISSED', name='report_status'), nullable=False),
    sa.Column('resolved_by', sa.UUID(), nullable=True),
    sa.Column('resolution_action', sa.Enum('REMOVE_CONTENT', 'SUSPEND_USER', 'WARN_USER', 'NO_ACTION', name='resolution_action'), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('resolved_at', sa.String(length=100), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['reported_product_id'], ['products.id'], name=op.f('fk_reports_reported_product_id_products'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reported_user_id'], ['users.id'], name=op.f('fk_reports_reported_user_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reporter_id'], ['users.id'], name=op.f('fk_reports_reporter_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], name=op.f('fk_reports_resolved_by_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reports'))
    )
    op.create_index('ix_reports_reported_product_id', 'reports', ['reported_product_id'], unique=False)
    op.create_index('ix_reports_reported_user_id', 'reports', ['reported_user_id'], unique=False)
    op.create_index('ix_reports_reporter_id', 'reports', ['reporter_id'], unique=False)
    op.create_index('ix_reports_status', 'reports', ['status'], unique=False)
    op.create_index('ix_reports_type', 'reports', ['report_type'], unique=False)
    op.create_table('reviews',
    sa.Column('transaction_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=True),
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=False),
    sa.Column('review_type', sa.Enum('PRODUCT', 'SELLER', name='review_type'), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('review_text', sa.Text(), nullable=True),
    sa.Column('seller_response', sa.Text(), nullable=True),
    sa.Column('helpful_count', sa.Integer(), nullable=False),
    sa.Column('is_verified_purchase', sa.Boolean(), nullable=False),
    sa.Column('responded_at', sa.String(length=100), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_reviews_product_id_products'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], name=op.f('fk_reviews_reviewer_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], name=op.f('fk_reviews_seller_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], name=op.f('fk_reviews_transaction_id_transactions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reviews')),
    sa.UniqueConstraint('transaction_id', name=op.f('uq_reviews_transaction_id'))
    )
    op.create_index('ix_reviews_product_id', 'reviews', ['product_id'], unique=False)
    op.create_index('ix_reviews_rating', 'reviews', ['rating'], unique=False)
    op.create_index('ix_reviews_reviewer_id', 'reviews', ['reviewer_id'], unique=False)
    op.create_index('ix_reviews_seller_id', 'reviews', ['seller_id'], unique=False)
    op.create_index('ix_reviews_transaction_id', 'reviews', ['transaction_id'], unique=False)
    op.add_column('users', sa.Column('follower_count', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('following_count', sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'following_count')
    op.drop_column('users', 'follower_count')
    op.drop_index('ix_reviews_transaction_id', table_name='reviews')
    op.drop_index('ix_reviews_seller_id', table_name='reviews')
    op.drop_index('ix_reviews_reviewer_id', table_name='reviews')
    op.drop_index('ix_reviews_rating', table_name='reviews')
    op.drop_index('ix_reviews_product_id', table_name='reviews')
    op.drop_table('reviews')
    op.drop_index('ix_reports_type', table_name='reports')
    op.drop_index('ix_reports_status', table_name='reports')
    op.drop_index('ix_reports_reporter_id', table_name='reports')
    op.drop_index('ix_reports_reported_user_id', table_name='reports')
    op.drop_index('ix_reports_reported_product_id', table_name='reports')
    op.drop_table('reports')
    op.drop_index('ix_activities_user_created', table_name='activities')
    op.drop_index('ix_activities_user', table_name='activities')
    op.drop_index('ix_activities_created', table_name='activities')
    op.drop_table('activities')
    op.drop_index('ix_notifications_user_read', table_name='notifications')
    op.drop_index('ix_notifications_user', table_name='notifications')
    op.drop_index('ix_notifications_created', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index('ix_follows_following', table_name='follows')
    op.drop_index('ix_follows_follower', table_name='follows')
    op.drop_table('follows')
    op.drop_index('ix_device_tokens_user', table_name='device_tokens')
    op.drop_index('ix_device_tokens_fcm_token', table_name='device_tokens')
    op.drop_table('device_tokens')
    op.drop_index('ix_blocks_blocker_id', table_name='blocks')
    op.drop_index('ix_blocks_blocked_id', table_name='blocks')
    op.drop_table('blocks')
    # ### end Alembic commands ###

